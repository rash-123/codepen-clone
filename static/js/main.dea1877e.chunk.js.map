{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAUe,SAASA,EAAOC,GAC9B,IACCC,EAIGD,EAJHC,SACAC,EAGGF,EAHHE,YACAC,EAEGH,EAFHG,MACAC,EACGJ,EADHI,SAED,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACC,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACC,sBAAKE,UAAU,eAAf,UACEN,EACD,wBACCO,KAAK,SACLD,UAAU,uBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHrC,SAKC,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGhD,cAAC,aAAD,CACCC,eAlBH,SAAsBC,EAAQC,EAAMd,GACnCC,EAASD,IAkBPA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACRC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,QCzCH,SAASC,EAAgBC,EAAKC,GAC5C,IAAMC,EAHQ,iBAGeF,EAE7B,EAA0BpB,oBAAS,WAClC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACHA,IAGAA,KART,mBAAOvB,EAAP,KAAc8B,EAAd,KAgBA,OAJAC,qBAAU,WACTL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAC/C,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCuCDI,MA1Df,WAEE,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAiBA,OAfAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAQR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKlC,UAAU,gBAAf,UACE,cAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,cAACxC,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC1C,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,OAGd,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCjDjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dea1877e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExchangeAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Editor(props) {\r\n const {\r\n  language,\r\n  displayName,\r\n  value,\r\n  onChange\r\n } = props\r\n const [open, setOpen] = useState(true);\r\n\r\n function handleChange(editor, data, value) {\r\n  onChange(value)\r\n }\r\n\r\n\r\n return (\r\n  <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n   <div className=\"editor-title\">\r\n    {displayName}\r\n    <button\r\n     type=\"button\"\r\n     className=\"expand-collapsed-btn\"\r\n     onClick={() => setOpen(prevOpen => !prevOpen)}\r\n    >\r\n     <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n    </button>\r\n   </div>\r\n   <ControlledEditor\r\n    onBeforeChange={handleChange}\r\n    value={value}\r\n    className=\"code-mirror-wrapper\"\r\n    options={{\r\n     lineWrapping: true,\r\n     lint: true,\r\n     mode: language,\r\n     theme: 'material',\r\n     lineNumbers: true\r\n    }}\r\n   />\r\n  </div>\r\n )\r\n}","import { useState, useEffect } from 'react';\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n const prefixedKey = PREFIX + key\r\n\r\n const [value, setValue] = useState(() => {\r\n  const jsonValue = localStorage.getItem(prefixedKey)\r\n  if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n  if (typeof initialValue === 'function') {\r\n   return initialValue()\r\n  }\r\n  else {\r\n   return initialValue\r\n  }\r\n })\r\n\r\n useEffect(() => {\r\n  localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n }, [prefixedKey, value])\r\n\r\n return [value, setValue]\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nfunction App() {\n\n  const [html, setHtml] = useLocalStorage('html', '');\n  const [css, setCss] = useLocalStorage('css', '');\n  const [js, setJs] = useLocalStorage('js', '');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}